{"version":3,"file":"Game.js","sourceRoot":"","sources":["../src/Game.ts"],"names":[],"mappings":"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","sourcesContent":["import { Shape } from './Shape';\nimport { Grid } from './Grid';\nimport { CellType } from './types/CellType';\nimport { Keyboard } from './input/Keyboard';\nimport { Touch } from './input/Touch';\n\nexport class Game {\n  private grid = new Grid();\n  private speed = 500;\n  private shape = new Shape(this.grid);\n  private nextShape = new Shape(this.grid);\n  private lastTickTime = 0;\n  private resetTickTime = false;\n  public gameOver = false;\n\n  constructor() {\n    this.initControls();\n    window.requestAnimationFrame((t) => this.update(t));\n  }\n\n  private initControls() {\n    const keyboard = new Keyboard();\n    const touch = new Touch(this.grid);\n    for (const input of [keyboard, touch]) {\n      input.addEventListener('rotate', () => this.onRotate());\n      input.addEventListener('moveLeft', () => this.onMoveLeft());\n      input.addEventListener('moveRight', () => this.onMoveRight());\n      input.addEventListener('moveDown', () => this.onMoveDown());\n    }\n  }\n\n  onRotate() {\n    if (this.gameOver) return;\n    this.shape.rotate();\n    this.resetTickTime = true;\n  }\n\n  onMoveLeft() {\n    if (this.gameOver) return;\n    this.shape.move({ x: -1, y: 0});\n  }\n\n  onMoveRight() {\n    if (this.gameOver) return;\n    this.shape.move({ x: 1, y: 0});\n  }\n\n  onMoveDown() {\n    if (this.gameOver) return;\n    this.shape.moveDown();\n    this.resetTickTime = true;\n  }\n\n  private tick() {\n    if (this.gameOver) {\n      return;\n    }\n    if (!this.shape.canMove({ x: 0, y: 1})) {\n      this.shape.draw(CellType.wall);\n      this.shape = this.nextShape;\n      this.nextShape = new Shape(this.grid);\n      if (!this.shape.canMove({ x: 0, y: 0})) {\n        this.gameOver = true;\n      }\n      this.shape.draw();\n    }\n    this.shape.tick();\n    this.grid.hideRows();\n  }\n\n  private update(timestamp: number) {\n    if (this.resetTickTime) {\n      this.lastTickTime = timestamp;\n      this.resetTickTime = false;\n    }\n    if (timestamp - this.lastTickTime > this.speed) {\n      this.lastTickTime = timestamp;\n      this.tick();\n    }\n    this.shape.draw();\n\n    this.grid.update();\n    this.shape.update();\n    window.requestAnimationFrame((t) => this.update(t));\n  }\n}\n\nconst game = new Game();\n"]}